// Code generated by fileb0x at "2018-07-04 13:14:48.717635493 +0300 MSK m=+0.202668980" from config file "b0x.toml" DO NOT EDIT.
// modification hash(6b3ea184a3e1ef6ead543ce04cbe157e.260bc3f002c03ba9d1b72f3323f18663)

package help

import (
	"bytes"
	"compress/gzip"
	"context"
	"io"
	"net/http"
	"os"
	"path"

	"golang.org/x/net/webdav"
)

var (
	// CTX is a context for webdav vfs
	CTX = context.Background()

	// FS is a virtual memory file system
	FS = webdav.NewMemFS()

	// Handler is used to server files through a http handler
	Handler *webdav.Handler

	// HTTP is the http file system
	HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct{}

// FileCreateConfigmapMd is "create/configmap.md"
var FileCreateConfigmapMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x44\x90\xc1\x8e\xdb\x30\x0c\x44\xef\xfe\x8a\x39\xb6\x80\xe5\x0f\xd8\xdb\xee\x36\x45\x8b\xee\xa1\x87\x6c\x81\x9e\x0a\x46\xa6\x6d\xc2\xb2\x64\x90\x74\x02\xef\xd7\x17\x4a\xd2\xe6\x26\x52\x83\x99\xc7\x79\x55\x26\x67\xc4\x92\x07\x19\x17\x5a\xbb\xe6\xf5\xdf\x13\x62\x20\x0c\x92\x18\xe6\x45\x69\xe4\x16\x97\x49\xe2\x84\x48\x19\x27\xc6\x52\xb6\xec\xdc\x43\xb2\x17\x50\xf5\x70\x92\xcc\xda\xe1\x38\xd5\x5f\x73\xc4\xb2\x2c\x25\x63\x33\x1a\x19\x65\xa8\x9a\x5b\x4e\x35\x9f\x99\x57\xc9\xe3\x7d\x79\x4d\xb2\x16\xca\xd4\x87\x92\xd3\x8e\x2f\x2f\x2d\x28\xf7\x30\x8e\xca\x6e\x1d\x5e\xc8\x24\x52\x4a\x7b\x8b\xbd\x6c\xa8\x18\x3e\x49\x9e\x41\xa7\xb2\x39\xc4\x91\x64\xe6\xfb\x74\x66\xdd\x61\xb2\xac\x89\x31\xf3\x1e\xce\x94\xb6\xff\x97\x74\x4d\x73\x9c\x58\x19\xa4\x0c\xe3\x33\x2b\x25\x5c\x68\x37\x78\xa9\x3c\xe6\xba\xc5\x8a\x7f\xc7\x7d\x6a\x02\x42\x10\xe7\x25\x98\x6b\x85\x1e\x12\x8d\x2d\x86\xa2\x0b\x79\x2d\x81\x0c\x3f\x0e\xbf\x9f\x7e\x3d\xbf\xbd\x1f\xb0\x92\xa8\xdd\x6a\xb8\x2d\x2a\xea\x89\xe1\x65\xe6\xdc\xc2\xa6\xa2\x0e\xc9\xe2\xd7\xa3\x5b\xb0\xc7\xee\x91\x70\xad\xfc\xe6\x5f\x2d\xbf\x7e\x7f\x3b\xfc\xf9\xf9\x7c\xfc\x86\xa2\x78\x0c\x9f\xaa\x2c\xd3\xc2\xb8\x48\x4a\xd5\x7d\x33\xee\xef\x1c\x9f\x9b\x00\xc9\xce\x4a\xd1\xe5\x5c\x25\x1f\xa4\x7d\xd3\xbc\x1b\xc3\x27\x46\x08\x43\xd1\xc8\xd7\x14\x78\x81\xcd\xb2\xe2\x22\x1f\xa4\xfd\xdf\x00\x00\x00\xff\xff\xc9\xe2\xbd\x94\x12\x02\x00\x00")

// FileCreateDeploymentContainerMd is "create/deployment-container.md"
var FileCreateDeploymentContainerMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x54\x8f\x51\x4a\x03\x41\x10\x44\xff\xf7\x14\x75\x81\xcd\x01\xfc\x5b\x54\x24\x60\x0c\x04\xfc\x96\xce\x4c\x4f\xd2\x32\xd3\x1d\x66\x3a\x09\xf1\xf4\x32\xeb\x2a\xf1\xb7\xa8\xf7\x8a\x9a\x62\x44\x30\x75\x12\xe5\x0a\x37\x44\x3e\x65\xbb\x15\x56\xbf\xcb\x1b\xfb\x0a\xd3\x85\x24\xd3\x3e\x33\x0a\xfb\xd1\x62\xeb\xf5\xfd\x59\x72\xbc\x83\x1e\x06\x00\x18\x91\xaa\x15\xa4\x4c\x87\xb6\x04\x57\xf1\x23\x44\x9d\x2b\x05\x97\x0b\x23\x58\x29\xa4\x31\x8b\x32\xae\xf2\x45\x35\x2e\xcd\x19\xbd\x51\xc9\x30\xc7\x67\x33\x45\x92\xcc\xc3\xf0\xde\x18\xe3\x98\xac\x06\x9e\xcd\x7d\x3e\x54\x26\xef\xae\xdf\x07\x7d\xc6\xce\xfe\x6f\xe9\xc7\xbe\x1a\xd6\x09\x7e\xec\x8e\xbf\xc3\xa3\x52\x59\x64\xd2\xa0\xe6\x68\x27\x0e\x92\x84\x63\xaf\xea\x82\xe2\xc0\xca\x95\x9c\x1b\x66\x60\x37\xbd\x3d\x6d\x37\x1f\x8f\xdb\xd7\xed\x6e\x5c\x6f\xa6\x97\xe7\xd5\x77\x00\x00\x00\xff\xff\x71\xda\x6e\x6a\x48\x01\x00\x00")

// FileCreateDeploymentMd is "create/deployment.md"
var FileCreateDeploymentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\xcc\x54\xc1\x6e\xe3\x36\x10\xbd\xf3\x2b\xde\xd9\x58\xba\xdb\xeb\x1e\x8a\x75\x53\x63\x11\x20\xb1\x81\x24\xdb\xcb\x76\xb1\x19\x4b\x23\x89\x0d\x45\xaa\x24\x65\xc7\x85\x3e\xbe\x20\x25\x5b\x4a\xec\x04\xdd\xe6\xd0\x9d\x8b\x46\xa4\x38\xf3\xf8\xde\x1b\x5d\x38\xa6\xc0\xc8\xb9\xd1\x76\x5f\xb3\x09\xd8\xa9\x50\x21\xb3\x26\x90\x32\xec\x3c\xc8\xe4\x70\xdc\x68\x95\x91\x9f\x8b\xc5\x96\x94\xa6\x8d\x66\xd4\x1c\x2a\x9b\x7b\x04\x8b\x4d\xab\x74\x8e\xfc\x58\xe3\x83\x90\x28\x9c\xad\x51\x68\x2a\xbd\x90\x7d\x4d\x65\x02\x3b\xca\x82\xda\x32\x32\x5b\xd7\x64\x72\xad\x0c\x63\xa7\xfe\x26\x97\x1f\x8e\xec\xa9\xd6\xb0\x01\x7f\x7a\x6b\x50\x28\xcd\x42\x7c\xf6\x0c\x29\x0b\xeb\x32\x4e\x15\x11\x2c\xb2\x1e\xf7\x11\x67\x6a\x61\xdb\xf0\xa4\x4b\x5f\x79\x2e\xc4\x5d\xc5\x8e\x41\x8e\xe1\x79\xcb\x8e\x34\x76\xb4\x4f\xd0\x7d\xc3\x99\x2a\xf6\x08\x15\xc3\x50\xcd\x1e\xb6\x18\xab\xfa\x54\x36\x35\xf5\xf1\x52\x52\x1e\x1b\xca\xf8\x75\xda\x11\x32\x9d\x6e\x1c\x17\xea\x11\x17\xeb\xd5\xdd\xe2\x72\xb5\xbc\xf9\xb6\x5a\x5c\x2f\x3f\x42\x99\xb4\x9b\x98\x80\x94\xaa\xa6\x92\xdf\x41\xca\x9a\x6b\xeb\xf6\x31\xcb\x9a\x36\x3e\xd8\x6c\xe3\x63\x6b\x75\x5b\xb3\x10\x97\x45\x3a\x77\xb6\x23\x94\x87\xb1\x61\x00\xaf\x38\x47\x14\x69\x00\x30\xec\xb5\x9e\xf3\xd8\x9c\xcc\x3e\x5e\x29\xde\x2f\x61\x78\x17\x53\x33\x50\x03\xcf\xe4\xb2\x8a\x3d\x0a\xeb\xe2\xc6\x01\x61\xff\x6d\xba\x7d\x24\x95\x0e\xc5\x63\x9f\x92\x0d\x3b\x0a\xec\x13\x61\xb8\x59\xac\x7e\x5b\x5f\x7f\xbb\x58\x5f\xad\x6f\xe4\xe5\xf5\xe2\xd3\x72\x9e\xd0\x4b\xc9\x8f\x8d\x75\x41\x46\x11\x61\x1d\xa4\xb4\x6d\x68\xda\x90\x6a\x47\x98\x9e\xa3\x5c\xb1\x75\xc6\xa8\x6d\xce\x03\xb6\x27\x66\xd4\x1a\x1b\x86\x35\x7a\x8f\xbe\x1e\xe7\x51\x7f\x6d\x33\xd2\xc9\x1f\x23\x48\xb3\x47\x56\x91\x29\xa3\x88\x06\x9e\xdd\x96\x9d\x57\x39\xcf\x85\x98\xcd\x96\x8f\x54\x37\x9a\xfd\x87\xd9\x4c\x08\x29\xa5\x98\xcd\x6e\x95\x29\x75\xf4\xe2\xe0\xf5\x54\xe9\x84\xf1\xf8\xfd\xfd\xfd\xfd\x86\x7c\x25\x7e\xc1\xfc\xa7\xec\x41\x85\x83\xfd\x22\x52\xfc\x21\x30\xc4\x89\x58\xb9\xb5\xe1\xc9\x7e\x92\x1f\xa6\x54\xe6\x31\x16\x15\xa2\x1b\x8e\xe2\x6a\xf1\xeb\xf2\xea\xf0\xd2\xe1\xf7\xe5\xcd\xed\xe5\x7a\x85\x0e\xb8\xbd\x5b\xdc\x7d\xbe\x45\x4c\x8f\xe6\xea\x5f\x81\xc5\xa7\x65\x3c\xd3\x89\x0e\xf2\x34\x30\xae\x8e\xd9\x64\x31\xc6\xf4\x35\xd5\xa1\x07\xe5\x88\x36\x2c\x2b\x56\x9e\xcd\x86\x5d\x19\x5b\xff\x3c\x7f\x3f\x7f\x1f\x41\x28\x33\xcc\x70\xd7\x5f\xef\x4b\xba\xcd\x57\x74\x68\x4d\xce\x85\x32\x9c\xa3\x7b\x95\xe2\xe8\xa8\xe7\x54\x7d\x17\xcb\x6f\x64\xb1\x8f\x29\x97\x7d\x24\x2d\xde\xce\xe8\x34\x4e\xd8\x05\x7c\xa3\x1c\x31\xc9\x07\x6a\x8b\x9a\x0c\x22\xa7\x67\xd9\xa5\xbf\x5a\xaa\xc9\x29\xc3\x32\x51\xfc\x3a\xd3\xd7\xad\x0e\xaa\xd1\x13\x3b\xf7\xe3\x7b\x96\xe9\xe8\xbd\xff\x64\xe8\x92\x02\xef\x68\xff\x92\xa7\xcf\xac\x6f\xb4\x2d\x3f\xee\xac\xcb\x1b\xc7\xde\xc7\xc6\xdf\x6b\xfa\x3e\xfe\x2f\xb9\x5c\x9b\x3d\xb0\xf3\xb2\x50\x3e\xab\xd8\xbd\x2c\x57\x8a\x03\x3f\x87\xa1\x88\xf1\x74\x30\x92\xc9\x4e\x62\x5c\x1d\xb3\x43\x1a\x19\xc4\x97\x23\x85\x5f\xe3\xe1\xc9\x57\xe3\xb0\xbd\x64\x81\x17\xe6\xed\x5f\xff\xd4\x26\xe3\xf6\xe3\x0a\x3c\x99\xb4\x49\xfa\x3c\xa6\x5b\xe9\x6f\x07\x20\x54\xca\x6f\x58\x1a\x6e\x6b\x32\xaf\xcc\x63\x8a\xf3\x62\x4c\xff\x7c\x53\x69\xc6\x18\x57\xc7\xac\x4f\x4b\x72\x86\xc3\xb3\x11\x47\x07\x00\x00\x00\xa0\x13\xff\x04\x00\x00\xff\xff\xc1\xc3\x02\x3d\xa6\x09\x00\x00")

// FileCreateIngressMd is "create/ingress.md"
var FileCreateIngressMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x34\x8f\x4d\x6a\xc3\x40\x0c\x85\xf7\x73\x8a\x77\x80\x4e\x0e\xd0\x5d\xe9\x0f\x0d\x84\x52\x48\xba\x2e\xaa\x22\x7b\xa6\x31\x23\x23\xc9\x36\xcd\xe9\x0b\x36\xde\x49\x7c\xbc\x8f\xf7\x9e\x4d\x28\x04\xb5\xf5\x26\xee\x87\x74\xdc\x0e\x54\x07\x35\xe8\xcf\xaf\x70\x20\x0a\x05\x58\x5b\x98\x0e\x0e\x62\x16\x77\x84\xc2\xc5\xe6\xca\xe2\x88\x62\x3a\xf5\x05\x2f\x1f\xe7\x03\x8e\x9b\x42\x1c\x4c\x0d\x8b\xda\x0d\x3b\x2f\x11\x23\xd4\xe0\xc2\x93\xc9\xfa\x3a\x46\xd3\x50\x5e\xcd\xed\x0a\x9f\xc6\x51\x2d\x70\x39\x9d\xf3\x4e\x0e\x29\x5d\x8a\x98\x80\x4c\xe0\x32\x8b\xd1\x80\x85\xfe\xd6\x12\xac\xcd\xc3\x26\x8e\x7d\xc4\x63\xca\xc8\xb9\xab\x83\xa0\x1b\xa8\x7f\xc0\xdb\xf1\xf4\xfa\xfd\xf9\x74\x79\x4f\x19\xb5\x85\x18\x71\xd4\x59\xb0\xd4\x3b\xd9\x35\xa5\x2f\x17\x44\x11\xe4\xdc\xa9\xf1\x96\x42\x28\xfc\x56\x47\x2c\xf5\x4e\x76\xfd\x0f\x00\x00\xff\xff\x35\x59\x26\xfa\x27\x01\x00\x00")

// FileCreateServiceMd is "create/service.md"
var FileCreateServiceMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x54\x8f\x4d\x4e\xeb\x50\x0c\x85\xe7\x77\x15\x67\x01\x4d\x16\xf0\x66\x55\xf5\x10\x48\x0c\x90\x28\x63\xe4\x38\x0e\x31\x24\xd7\x91\xaf\x93\x90\xae\x1e\x95\x50\x24\x66\xfe\xfb\x3e\xf9\x9c\x5c\x28\x04\x45\x7c\x51\x96\x3a\x3d\xef\x05\xb4\x80\x32\xac\x79\x17\x8e\x03\xe6\x22\x2d\x9a\x0d\x34\x4d\x83\x32\x85\x5a\x2e\xe8\xcc\xc1\x36\x8e\x73\xd6\x7d\x84\x55\xa3\x87\x10\xf7\xb0\xe8\xc5\xbf\x7b\xcd\x38\x59\x0e\xd2\x2c\x3e\x8f\x10\xb6\xb2\x95\x90\x11\xb6\xef\x21\x9f\x21\x9e\x69\xf8\x23\xaf\x71\xbc\xfd\x04\xa6\x8c\x46\xa0\xf9\xe7\xce\xfc\x97\xa9\x53\x3a\xf7\xe2\x02\xf2\x6b\x86\x45\x9c\x06\xac\xb4\x15\x84\x81\x2d\x97\xf0\x99\xe3\x66\xfa\x97\x2a\x54\x55\xa7\x83\xa0\x1b\xe8\xed\x80\xbb\x87\xc7\xff\xaf\x4f\xc7\xf3\x7d\xaa\x76\x3d\x71\xe8\x22\x58\xf5\x42\xde\xa6\xf4\x52\x04\xd1\xcb\x15\x32\xe7\x9d\x42\x18\xca\x87\x4e\x58\xf5\x42\xde\x7e\x05\x00\x00\xff\xff\x4f\x2e\xd9\x67\x40\x01\x00\x00")

// FileDeleteDeploymentVersionMd is "delete/deployment-version.md"
var FileDeleteDeploymentVersionMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x6c\xce\x41\x4a\x03\x41\x10\x85\xe1\xfd\x9c\xe2\xed\xa2\x30\x29\x12\x15\xbd\x80\x1b\x57\xee\xdc\x57\xba\xdf\xc4\x86\xe9\xea\x58\x5d\x19\x98\xdb\x8b\x20\x83\x48\x0e\xf0\xfe\xef\xbd\xf2\x32\xb7\xb5\xd2\x02\xa6\x95\x48\x6a\x38\x11\x9d\x01\xed\x98\x8a\xf7\x80\xfa\x79\xc4\x34\xeb\x19\xbb\xfd\x3e\x6f\x83\x1d\x9a\xa3\x18\x8a\x05\x5d\x53\x94\x85\xa8\xb4\xab\x0c\x1f\xf4\x5e\x9a\xfd\x8d\x15\xc3\xe4\x24\xa6\xe6\x15\x77\xcb\x51\x0e\xf2\x30\xe2\xf8\x24\x2f\x23\x1e\xe5\x59\x0e\x23\x18\x49\xee\x71\xbb\x89\x68\x4d\x86\x77\x9b\x57\x14\xfb\xb5\x96\xff\xca\xcc\x14\xcc\x32\x0c\x6f\xf6\xe3\x24\xa2\xb6\x4c\x9c\x5a\x7c\x22\x6f\xb7\xa1\x96\xb7\xed\x45\x5d\x2b\x83\xde\xa1\x4e\x38\xbf\xae\xc5\x99\xe5\x3b\x00\x00\xff\xff\x75\x35\x91\x5a\x17\x01\x00\x00")

// FileDeleteDeploymentMd is "delete/deployment.md"
var FileDeleteDeploymentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\xac\x95\x49\x6f\xdb\x30\x10\x85\xef\xfc\x15\x73\x95\x61\xa6\xf0\x9a\xd4\x87\x16\x45\x72\x29\x50\xf4\xd2\x53\x51\x14\xf0\x58\x1a\x5b\x8c\x29\xd2\xe0\x12\x41\xfd\xf5\x85\x14\x35\x26\x25\x0a\x4d\x97\x9b\x20\x3c\x0e\xe7\x7b\xf3\x48\x3e\x90\x24\x47\x50\xd0\x45\xea\xa6\x22\xe5\x6e\xe0\x93\xb0\x0e\xf4\x31\xf8\x67\xc1\x69\x28\x9e\x95\x95\xb7\x0e\x0e\x04\x17\xa3\x9f\x44\x41\x05\xa0\x05\x34\x27\xff\xbc\xf6\xe3\x11\x64\xbb\x5c\x58\xa0\xea\xe2\x9a\x39\xb8\x92\x14\xe4\xe5\x59\x38\xa8\x85\x94\x60\x1d\x1a\x07\x42\x39\x32\x98\x3b\xf1\x44\x50\x91\xf2\x37\x8c\xcd\x66\x7d\x2f\x5d\x81\xc1\xfe\xb5\x70\xa5\xf6\x0e\x38\x3f\x6a\x93\xd3\x6c\xc6\xd8\x7e\xbf\x3f\xa0\x2d\xd9\xbb\xbe\x7a\xdf\xdf\x95\x04\x2a\x51\x69\x8b\xbc\x46\x73\xf0\xe6\x04\xe8\x4a\xac\x50\x39\x61\xf9\x09\xbd\xb5\x70\x94\xda\x20\xd7\x4a\x91\x65\x1f\x0c\x41\xa3\x3d\x18\x42\x29\x1b\xa8\x51\x39\xb8\x42\x5f\xbf\xe2\x9a\xf3\x51\xd1\x79\x58\xf5\x3d\x7c\xfb\xfa\xe6\xf3\xf7\x1d\x34\xec\xe1\xc5\xe0\x50\xd0\xfa\xf4\xdc\x77\x11\x2a\xe2\x4d\x26\x44\x23\x1c\x61\x5f\x6a\xad\x02\x1b\xda\xf1\xb4\x03\x6e\xe7\x5c\x74\xb6\xbd\xc2\xeb\x57\x1a\xfd\x4b\x06\x52\xa8\x82\x14\x7a\x9e\x97\xd8\x90\x85\x0a\xe5\x13\xf2\x5c\xa2\x39\x13\x5c\xd0\xd7\x24\x2d\x77\x9a\x2e\x92\x4c\x48\x3a\x5c\x17\x30\x04\x8e\x45\xd5\xd2\x92\xc1\x1e\xa1\x6a\xda\x8c\xfd\x3e\xf4\x22\x48\x4e\x1b\xb7\x28\xa3\x96\x24\xe5\x4e\x68\xf5\x9b\xe4\xb1\x2f\x9d\x30\xa8\xb5\xeb\x7f\x51\xb1\x63\xb0\xc8\xe0\xe4\xcd\x8f\x52\x3c\x72\x45\xb5\xd3\x8a\xc1\x32\x83\x47\xcc\xcf\x56\x2b\x2e\x49\xa1\x29\x18\xac\x32\x38\xfb\x0b\xf1\x0a\x4f\xca\x5b\x06\xeb\x6c\xe8\x13\x83\x4d\x16\xb9\xc2\x60\xdb\xfe\x30\x79\x29\x2c\x6f\xb4\x57\x27\x06\xb7\xd9\xd0\x15\x06\x77\x19\x18\x3a\x90\x72\x46\x5b\xc7\x5d\x89\x92\x2c\x83\xb7\x19\xdc\x6b\x75\x14\xa6\x62\xf7\xa5\xd6\x96\xa0\x16\x96\x64\xb3\x83\x45\xdf\x7d\x1a\x68\x04\xb3\x18\xc3\x2c\xb3\x18\x66\x95\x8d\x61\xd6\x6d\xef\xd7\xc0\xf4\x74\x11\xcc\x36\x01\x73\x9b\x84\xb9\x9b\x84\x59\xfe\x09\x4c\xdc\x75\x1a\x6c\x90\xde\x6e\x72\x61\x56\xbb\xd1\x55\x31\xc8\x26\x01\xb2\x4d\x82\xdc\x4e\x82\xac\xff\x16\x64\xd8\xcc\x3f\x60\x0d\x0e\x5c\x37\xb3\x44\xb4\xb6\x93\x10\x8b\xff\x03\x31\x3a\x3d\x8b\x44\xc0\x96\xc3\x80\xad\x12\x53\x58\x27\xa7\xb0\x99\x04\xd8\xb0\xd7\x3e\x1a\xf1\x99\x9f\x87\xd1\x9a\xc7\x23\x99\x0f\x70\xd2\x2f\x48\x5c\x2f\xbc\xeb\x82\x4b\xf3\x7c\xbd\x42\x26\x14\x51\x32\x27\x34\xf1\xdd\x14\x8a\xd6\xc1\x9d\x30\x7e\x63\x7e\x06\x00\x00\xff\xff\x26\xf2\xb7\x57\x58\x08\x00\x00")

// FileRunDeploymentVersionMd is "run/deployment-version.md"
var FileRunDeploymentVersionMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x6c\xce\x31\x6e\xeb\x30\x10\x84\xe1\x5e\xa7\x98\x4e\xef\x01\x12\x61\x27\x41\x72\x81\x34\xbe\x40\xfa\xb5\x38\xb4\x09\x88\x4b\x67\xb9\x12\x90\xdb\x07\x8a\x03\xc1\x45\x1a\x16\xc4\xce\x8f\xef\x9d\xb7\xb9\x7e\x15\xaa\x43\xa5\x10\x93\x28\xce\x44\xa3\x43\x1a\x52\xb6\xe6\x10\xbb\x0c\x48\xb3\x5c\xd0\x8f\x63\xdc\x07\x3d\xaa\x21\x2b\xb2\x3a\x4d\x26\xcf\x2b\x51\xa8\x4b\xe8\x3e\x68\x2d\x57\x7d\x8c\x65\x45\x32\x12\xa9\x5a\xc1\xbf\xf5\x18\x0e\xe1\x69\xc0\xf1\x25\xbc\x0d\x78\x0e\xaf\xe1\x30\x80\x3e\x85\xff\xf8\xbb\x09\xaf\x35\x74\xa7\x74\x67\xac\x32\x2f\x44\x6e\xe8\xc7\x1f\x44\x3f\x8b\xb3\x79\x3f\xc0\xaf\xd4\xed\xc1\xfd\x07\xeb\xaf\xa4\x26\xc4\x1d\xbe\x2d\x97\xc6\x18\xba\xee\xa4\x9b\x68\x22\x4a\x8d\xc4\xb9\xfa\xf5\xf1\x4e\x34\xee\x85\x9b\x98\x14\x3a\xad\x41\x8c\x30\x7e\x2e\xd9\x18\xc3\x77\x00\x00\x00\xff\xff\x25\xaa\x53\x38\x41\x01\x00\x00")

// FileRunSolutionMd is "run/solution.md"
var FileRunSolutionMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x4c\xce\x3d\x4e\x03\x31\x10\xc5\xf1\xde\xa7\x78\x07\xc0\x39\x00\x1d\x05\x08\x24\x0a\x04\xa1\x46\x83\xfd\x36\x3b\xe0\x78\xa2\xf1\x64\x57\xc9\xe9\x11\x1f\x12\xe9\x5e\xf3\x7b\xfa\x3f\x1f\x3b\x86\xb5\x63\xa8\xf5\x4d\x7a\xf9\x5b\xd0\x01\xe9\xb0\xf7\x0f\x96\x40\xcc\x12\x90\xd6\x6c\x1d\x08\x43\x71\x4a\x10\xd2\x2b\xf6\xd2\x65\x47\x0c\x2e\x74\x69\xa8\x3c\x34\x3b\xed\xd9\xe3\x9b\x57\x0c\xfa\xa2\x85\x03\x12\xb0\x5e\xb8\x49\x69\x3b\xd3\x09\xf1\x7f\xb4\xca\xe9\xe7\xd6\x2f\x4a\xae\x53\x46\xce\x93\x36\x62\x6a\xb2\xbb\xc2\xdd\xc3\xe3\xed\xdb\xd3\xcd\xf6\x3e\x65\x68\x0f\xba\x94\xd0\x85\x58\xf5\x2c\x5e\x53\x7a\x1d\x44\xcc\x44\xce\x93\x79\xf9\x55\x08\xc3\xf8\xd4\x03\x56\x3d\x8b\xd7\xaf\x00\x00\x00\xff\xff\x8b\xf5\x7f\xbe\xea\x00\x00\x00")

// FileUpdateMd is "update.md"
var FileUpdateMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x04\xff\x04\xc0\xb1\x15\x02\x31\x08\x06\xe0\x9e\x29\xfe\x09\x1c\xc1\x01\xec\xed\xe1\x72\x9c\xf0\x2e\x31\x79\x01\x0a\xb7\xf7\x7b\xaf\x53\x52\xd1\xec\xf6\xc4\xb5\xe7\xc0\xc7\xd3\xea\xc0\xdc\xe8\xb3\x49\xc7\xe5\x5d\xe3\x17\xa9\xe3\x41\xf4\xaa\x48\xec\xfa\x12\x31\xf3\x21\x61\xf4\x44\xb3\xdb\x13\xb5\x4e\x49\x25\x66\xfe\x07\x00\x00\xff\xff\xac\xa5\xd9\x67\x53\x00\x00\x00")

func init() {
	err := CTX.Err()
	if err != nil {
		panic(err)
	}

	err = FS.Mkdir(CTX, "create/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "delete/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "run/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	var f webdav.File

	var rb *bytes.Reader
	var r *gzip.Reader

	rb = bytes.NewReader(FileCreateConfigmapMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "create/configmap.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileCreateDeploymentContainerMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "create/deployment-container.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileCreateDeploymentMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "create/deployment.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileCreateIngressMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "create/ingress.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileCreateServiceMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "create/service.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileDeleteDeploymentVersionMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "delete/deployment-version.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileDeleteDeploymentMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "delete/deployment.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileRunDeploymentVersionMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "run/deployment-version.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileRunSolutionMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "run/solution.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileUpdateMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "update.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	Handler = &webdav.Handler{
		FileSystem: FS,
		LockSystem: webdav.NewMemLS(),
	}

}

// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {

	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

	// If the buffer overflows, we will get bytes.ErrTooLarge.
	// Return that as an error. Any other panic remains.
	defer func() {
		e := recover()
		if e == nil {
			return
		}
		if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
			err = panicErr
		} else {
			panic(e)
		}
	}()
	_, err = buf.ReadFrom(f)
	return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
		return nil, err
	}

	err = f.Close()
	if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}
